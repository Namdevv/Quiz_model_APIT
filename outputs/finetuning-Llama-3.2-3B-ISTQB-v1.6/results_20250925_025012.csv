question_id,question,model_answer_raw,model_answer_norm,correct_answer,is_correct,k_level
ISTQB-C-v1.6-01,Which of the following is a typical test objective?,"Testing objectives define the purpose and goals of a test. Let's break down the options:

A. **Validating that documented requirements are met** - This is a common objective. Tests aim to ensure that the software behaves as described in the requirements document. This is a broad but valid objective.

B. **Causing failures and identifying defects** - While causing failures is a key part of testing, it's more of a **methodology** or **approach** to testing rather than a specific **test objective**. The goal is to identify defects, but the action of causing failures is a means to that end.

C. **Initiating errors and identifying root causes** - Similar to B, this describes a **testing strategy** or **approach**. The goal is to understand the root cause of an error, but the action of initiating errors is part of the testing process.

D. **Verifying the test object meets user expectations** - While user expectations are a crucial aspect of testing, the phrase ""test object meets user expectations"" is a bit awkward. Typically, the objective is to verify that the software (the ""test object"") meets certain criteria (e.g., functionality, performance, security) that aligns with user needs, but the phrasing here doesn't perfectly capture a typical test objective.

Therefore, the best answer is **A**, as it directly states a common and specific test objective: validating that the software meets the documented requirements.",A,B,False,K1
ISTQB-C-v1.6-02,Which of the following statements BEST describes the difference between testing and debugging?,"Option D: 'Testing finds the cause of defects while debugging fixes the cause of defects'. Testing identifies where defects are located, and debugging is the process of finding and fixing the root cause of the issue.",D,C,False,K2
ISTQB-C-v1.6-03,The 'absence-of-defects fallacy' is one of the principles of testing. Which of the following is an example of addressing this principle in practice?,"The 'absence-of-defects fallacy' occurs when testers assume that if no defects are found during testing, the system is defect-free. This is incorrect because a system can still have defects that are not triggered by the current test case or are hidden behind complex logic.

Addressing this principle in practice means ensuring that tests not only fail to find defects but actively confirm that certain parts of the system or specific defects have been eliminated.

- Option C ('Ensuring that no implementation defects remain in the delivered system') is incorrect because it implies that all defects must be removed, which is not practical or realistic. Testing can only confirm that certain defects have been eliminated during the delivery process, not that all defects exist in the code or implementation.
- Option A ('Explaining that it is not possible for testing to show the absence of defects') is a common pitfall of the 'absence-of-defects fallacy'. It misinterprets the principle, suggesting that testing cannot prove a system is defect-free.
- Option B ('Supporting the end users to perform acceptance testing') is not directly addressing the 'absence-of-defects fallacy'. While end users may perform acceptance testing, the fallacy refers to a testing principle, not an acceptance testing practice.
- Option D ('Modifying tests that cause no failures to ensure few defects remain') is the correct answer. It involves actively improving test cases to ensure they both fail to find defects and confirm that defects have been eliminated. This way, testers validate not just the absence of failures but also the absence of defects within the scope of the test.",D,B,False,K2
ISTQB-C-v1.6-04,Which of the following test activities are MOST likely to involve the application of boundary value analysis and equivalence partitioning?,"Boundary value analysis and equivalence partitioning are design of experiments techniques used to reduce the number of test cases required for a given input space. They are most closely associated with **Test Design (B)**. 

- **Boundary Value Analysis (BVA)**: A method where inputs are tested at the boundary values (e.g., lowest/highest acceptable value) and values immediately beyond those boundaries to check for unexpected behavior. It is a part of **Test Design** because testers decide which inputs to test based on BVA criteria.

- **Equivalence Partitioning (EPP)**: A method where inputs are grouped into equivalence classes based on their expected behavior. It is a fundamental part of **Test Design** because testers decide how to partition the input space for testing based on EPP principles.

The other options do not directly involve the application of these design of experiments techniques:
- **Test Implementation (A)**: Refers to writing the actual test scripts, which is a later stage in the testing lifecycle and not directly related to design.
- **Test Execution (C)**: Refers to running the existing test cases, which is a separate stage from designing them.
- **Test Monitoring (D)**: Refers to keeping track of test results, which is also a separate stage from designing the tests.
- **Test Analysis (E)**: While testing involves analysis, this option is too broad and does not specifically refer to the design phase where boundary value and equivalence partitioning are applied.",B,"B, E",False,K2
ISTQB-C-v1.6-05,"Given the following testware:
1. Coverage items
2. Change requests
3. Test execution schedule
4. Prioritized test conditions
And the following test activities
A. Test analysis
B. Test design
C. Test implementation
D. Test completion
Which of the following BEST shows the testware produced by the activities?","To determine which activity produces the most testware, we need to analyze the relationships between test activities and their outputs. 

- **Test Analysis (A):** Primarily an internal process for the testers, it does not directly produce tangible testware like coverage items, test cases, or test execution schedules. It's a foundational step but not a direct producer of concrete testware.
- **Test Design (B):** This activity directly produces:
  - **Prioritized Test Conditions/Scenarios:** These are the building blocks of test cases.
  - **Test Cases:** These are the primary deliverable of test design, encompassing both positive and negative paths.
  - **Test Execution Schedules:** These outline when and how test cases should be executed.
  - **Coverage Items:** These are the specific parts of the code that need to be covered by tests, often generated or identified during test design.
  - **Partially Generated Test Data:** Although not listed, test design often involves defining the structure and content of test data.
- **Test Implementation (C):** This activity directly produces:
  - **Test Implementation Code:** This is the actual code that performs the test cases, which is not listed but is the most tangible output.
- **Test Completion (D):** This activity marks the end of a test case or suite but does not produce new testware.

Therefore, the activity that **BEST** shows the testware produced is **Test Design (B):** It directly generates or is responsible for creating the majority of the testware, including test cases, test execution schedules, coverage items, and partially generated test data.",B,A,False,K2
ISTQB-C-v1.6-06,Which of the following statements about the different testing roles is MOST likely to be CORRECT?,"The correct statement is 'C': 'In Agile software development, test management activities that span multiple teams are handled by a test manager outside the team, while some test management tasks are handled by the team itself'. This accurately reflects the shared and distributed nature of test management in Agile environments.",C,C,True,K2
ISTQB-C-v1.6-07,Which of the following is an advantage of the whole-team approach?,"Improving team dynamics is a key advantage of the whole-team approach, as it fosters collaboration and knowledge sharing.",B,B,True,K1
ISTQB-C-v1.6-08,Which of the following statements about the independence of testing is CORRECT?,"The correct statement about the independence of testing is: ""Independent testers will find defects due to their different technical perspective from developers, but their independence may lead to an adversarial relationship with the developers."" This highlights the dual nature of independent testing: it brings objectivity and finds defects that developers might miss, but it also creates a potential rift between testers and developers.",A,A,True,K2
ISTQB-C-v1.6-09,Which of the following is a good testing practice that applies to all software development lifecycles?,"For every test activity, there is a corresponding development activity. This ensures that testing is integrated with the development process, which is a core principle of good testing practices.",D,D,True,K1
ISTQB-C-v1.6-10,Which of the following is an example of a test-first approach to development?,The correct answer is 'D': 'Acceptance Test-Driven Development'. This is because acceptance test-driven development (ATDD) is a software development process that relies on writing tests before writing code. It is a 'test-first' approach where developers write the acceptance tests for a new feature before even writing the underlying logic.,D,D,True,K1
ISTQB-C-v1.6-11,Which of the following provides the BEST description of shift-left?,B provides the BEST description of shift-left. It accurately captures the essence of shifting test activities earlier in the SDLC to reduce overall costs.,B,B,True,K2
ISTQB-C-v1.6-12,Which of the following is LEAST likely to occur as a result of a retrospective?,"The correct answer is A, as a retrospective focuses on improving past practices, not future test objects.",A,C,False,K1
ISTQB-C-v1.6-13,Which of the following test levels is MOST likely being performed if the testing is focused on validation and is not being performed by testers?,"If the testing is focused on validation and is not being performed by testers, it is most likely 'Acceptance testing'. This is because acceptance testing is a validation test level performed by the acceptance team (which may not include testers) to validate whether the system meets the acceptance criteria.",D,D,True,K2
ISTQB-C-v1.6-14,"The navigation system software has been updated due to it suggesting routes that break traffic laws, such as driving the wrong way down one-way streets. Which of the following BEST describes the testing that will be performed?","The correct answer is B. The testing process will involve first running the navigation system with the updated software to confirm that it still produces illegal routes (confirmation testing). Then, the system will be reverted back to its previous version (regression testing) to ensure that the illegal routes were fixed in the update.",B,B,True,K2
ISTQB-C-v1.6-15,"Given the following example defects:
i. Two different parts of the design specification disagree due to the complexity of the design
ii. A response time is too long and so makes users lose patience
iii. A path in the code cannot be reached during execution
iv. A variable is declared but never subsequently used in the program
v. The amount of memory needed by the program to generate a report is too high
Which of the following BEST identifies example defects that could be found by static testing (rather than dynamic testing)?","Static testing identifies defects through analysis of code and specifications without execution. Defects listed in options A, B, and D require execution to confirm. Only option C (i, ii, iv) represents defects that can be identified purely through static analysis of code and specification.",C,D,False,K1
ISTQB-C-v1.6-16,Which of the following is a benefit of early and frequent stakeholder feedback?,"A benefit of early and frequent stakeholder feedback is that changes to requirements are understood and implemented earlier. This ensures that the product development process stays aligned with stakeholder needs, reducing delays and integration issues later in the development lifecycle.",A,A,True,K1
ISTQB-C-v1.6-17,"Given the following review types:
1. Technical review
2. Informal review
3. Inspection
4. Walkthrough
And the following descriptions:
A. Includes objectives such as gaining consensus, generating new ideas, and motivating authors to improve
B. Includes objectives such as educating reviewers, gaining consensus, generating new ideas and detecting potential defects
C. The main objective is detecting potential defects and it requires metrics collection to support process improvement
D. The main objective is detecting potential defects and it generates no formal documented output
Which of the following BEST matches the review types and the descriptions?","Explanation: 
- Technical reviews focus on providing constructive feedback that may include gaining consensus, generating new ideas, and improving the work. They are often formal and objective (1A, 2B, 3C, 4A).
- Informal reviews focus on educating the reviewers and gaining consensus, but they do not generate new ideas (2D, 3D, 4B).
- Inspections are formal, structured, and focused on detecting defects, which aligns with objectives B and C. They generate no formal output (3D, 4B).
- Walkthroughs are informal, interactive, and also focused on defect detection, aligning with objectives B and D (4A).
- Option C is incorrect because it incorrectly associates informal reviews with defect detection and metric collection.
- Option D is correct because it accurately matches the main objective of defect detection and the lack of formal documented output for inspections and walkthroughs.",D,B,False,K2
ISTQB-C-v1.6-18,Which of the following is a factor that contributes to a successful review?,"Set reviewer evaluation as an objective. This ensures that reviewers are held accountable for their quality and consistency, contributing to successful reviews.",C,B,False,K1
ISTQB-C-v1.6-19,What is the MAIN difference between black-box test techniques and experience-based test techniques?,"Black-box test techniques focus solely on the input, output, and functionality of the software system without considering internal design or implementation details. They treat the software as a black box, where the tester provides inputs and observes outputs to check for correctness without knowing how the system internally works.

Experience-based test techniques, on the other hand, rely on the knowledge and expertise of the tester regarding the internal design, implementation, and future enhancements of the system. They are often used in early stages of development when the testers have a deep understanding of the system's architecture, design decisions, and upcoming features. This allows them to design tests that cover not just the current functionality but also potential future improvements, internal logic, and upcoming bug fixes.",model not answer,C,False,K1
ISTQB-C-v1.6-20,"You are testing a PIN validator, which accepts valid PINs and rejects invalid PINs. A PIN is a sequence of digits. A PIN is valid if it consists of four digits, which are not all the same digit. You have identified the following valid equivalence partitions:
Variable: PIN code length
- The partition “length correct” (four-digit PINs)
- The partition “length incorrect” (PINs with length other than 4)
Variable: Number of different digits
- The partition “number of different digits correct” (PINs with at least two different digits)
- The partition “number of different digits incorrect” (PINs with all digits being the same)
Which of the following is the BEST set of input test data to cover the identified equivalence partitions?","The best set of test data is: {'A': '1234', 'B': '1111', 'C': '12', 'D': '12345'}. This set covers all the equivalence partitions: a four-digit PIN with different digits (‘A’), a four-digit PIN with the same digit (‘B’), a PIN of length four but with different digits (‘A’ is correct but ‘C’ is not), and a PIN of length five (which is correct but not part of the partitions).",A,A,True,K2
ISTQB-C-v1.6-21,A developer was asked to implement the following business rule: INPUT: value (integer number) IF (value ≤ 100 OR value ≥ 200) THEN write “value incorrect” ELSE write “value OK” You design the test cases using 2-value boundary value analysis. Which of the following sets of test inputs achieves the greatest coverage?,"The greatest coverage is achieved by option D: {'A': '100, 150, 200, 201', 'B': '99, 100, 200, 201', 'C': '98, 99, 100, 101', 'D': '101, 150, 199, 200'}. This set of inputs tests the boundary values 100, 150, 200, and 201 from different angles, ensuring that the business rule “value incorrect”/“value OK” is correctly applied under all conditions.",D,D,True,K3
ISTQB-C-v1.6-22,"You are working on a project to develop a system to analyze driving test results. You have been asked to design test cases based on the following decision table.
||R1|R2|R3|
|-------------:|:-------------:|:-------------:|:-------------:|
|C1: First attempt at the exam?|-|-|F|
| C2: Theoretical exam passed?|T|F|-|
| C3: Practical exam passed?|T|-|F|
| Issue a driving license?|X|||
| Request additional driving lessons?|||X|
| Request to take the exam again?||X||

What test data will show that there are contradictory rules in the decision table?","To show that there are contradictory rules, the test data should assign different values to the same set of conditions. For example, if C1 = True, then C2 should be True, but C3 should be False. If C1 = True, then C1 = False, C2 = True, and C3 = True. This is a contradictory set of rules.",model not answer,D,False,K3
ISTQB-C-v1.6-23,"You are designing test cases based on the following state transition diagram:From the START state:
- A “Room request” event leads to the REQUESTING state.

From the REQUESTING state:
- If the room is “Available”, the system transitions to the CONFIRMED state.
- If the room is “Not available”, the system transitions to the WAITING LIST state.

From the WAITING LIST state:
- If the room becomes “Available”, the system transitions to the CONFIRMED state.
- If the user “Cancel”s the request, the system transitions to the END state.

From the CONFIRMED state:
- A “Pay” event leads to the END state.

From the END state, there are no further transitions.

What is the MINIMUM number of test cases required to achieve 100% valid transitions coverage?","To ensure 100% valid transition coverage, we must test all possible paths from the START state, including negative scenarios.

1.  **Positive Path (Valid Transition):**
    *   **Action:** Send a “Room request” event.
    *   **Expected Result:** The system transitions to the CONFIRMED state.

2.  **Negative Path for Room Availability (Valid Transition):**
    *   **Action:** Send a “Room request” event for a room that is “Available”.
    *   **Expected Result:** The system transitions to the CONFIRMED state.

3.  **Negative Path for Room Unavailability (Valid Transition):**
    *   **Action:** Send a “Room request” event for a room that is “Not available”.
    *   **Expected Result:** The system transitions to the WAITING LIST state.

4.  **Negative Path for Cancel Request (Valid Transition):**
    *   **Action:** Send a “Room request” event, then simulate a “Cancel” event.
    *   **Expected Result:** The system transitions to the END state.

5.  **Positive Path for Payment (Valid Transition):**
    *   **Action:** Confirm the room is available, then send a “Pay” event.
    *   **Expected Result:** The system transitions to the END state.

6.  **Negative Path for Payment Failure (Not Valid Transition, but Error Validation):**
    *   **Action:** Confirm the room is available, then simulate a payment failure (e.g., “Decline”).
    *   **Expected Result:** The system should not transition to an unexpected state but should handle the error gracefully.

These 6 test cases cover all valid transitions and their negative counterparts, ensuring 100% valid transition coverage.",A,A,True,K3
ISTQB-C-v1.6-24,"You want to apply branch testing to the code represented by the following control flow graph.
- From A to B
- From B to C
- From C: If True, go to D. If False, go to I.
- From D to E
- From E to F
- From F: If True, go to G. If False, go to H.
- From G to C
- From H to C

How many coverage items do you need to test?","To achieve branch coverage, you must test all paths and their conditions. Here's how the given control flow graph maps to the required coverage items:
- Branch from C to D and from C to I: 2
- Branch from F to G and from F to H: 2
- Branch from B to C: 1
- Branch from A to B: 1
- Branch from C to D, then to E, then to F, then to G, then to C, then to H: 7
- Branch from D to E: 1
- Branch from E to F: 1

Adding these together: 2 + 2 + 1 + 1 + 7 + 1 + 1 = 15
Therefore, to achieve branch coverage, you need 15 different coverage items.",model not answer,C,False,K2
ISTQB-C-v1.6-25,How can white-box testing be useful in support of black-box testing?,"White-box testing provides detailed coverage information about the code. This information can be used to better support black-box testing by: 
- Providing coverage metrics for black-box test cases, e.g., how much of the system's functionality is covered by a specific black-box test case.
- Helping in the design of more comprehensive black-box test cases by identifying areas of the code that are less likely to be tested.
- Enabling testers to evaluate the effectiveness of their black-box test cases.
- Identifying unreachable parts of the code, which can help in designing more robust black-box test cases for areas that are likely to be exercised.
- Offering coverage items that can be mapped back to specific black-box test cases, helping in the validation of black-box test coverage.

While white-box testing is traditionally used for unit testing and defect identification, its role in supporting black-box testing is complementary and valuable.",A,A,True,K2
ISTQB-C-v1.6-26,"Consider the following list: • Correct input not accepted • Incorrect input accepted • Wrong output format • Division by zero
What test technique is MOST PROBABLY used by the tester who uses this list when performing testing?","The list provided seems to be a set of expected error messages or validation rules. A tester who uses this list when performing testing is most probably using **Boundary Value Analysis (BVA)**. BVA involves testing values at the boundaries of input ranges (e.g., minimum, maximum, valid) to ensure correct handling of inputs. This matches the structure of the provided list, which appears to be a checklist of expected input validation outcomes.",A,B,False,K2
ISTQB-C-v1.6-27,Which of the following BEST describes how using checklist-based testing can result in increased coverage?,"Using checklist-based testing increases coverage in two main ways. 
- **Option B:** Automating the checklist means that every time an automated test execution covers the checklist items, it results in additional coverage. This is because the automation process is repeatable and can be run multiple times, each time covering more of the items on the checklist. This leads to a high degree of coverage of the software's functionalities.
- **Option B** is the best answer because it directly addresses how automation leads to increased coverage. The other options are not accurate descriptions of how checklist-based testing results in increased coverage.",B,D,False,K2
ISTQB-C-v1.6-28,Which of the following provides the BEST example of a scenario-oriented acceptance criterion?,"Scenario-oriented acceptance criteria (SOC) define how the system should behave in specific, realistic scenarios. They emphasize the 'what' and 'how' of user interactions, rather than just the 'what' of state changes (like option C).

- **Option A** is a good example of a scenario-oriented criterion because it describes a specific user journey (deleting an account and all associated data) and the required behavior (must allow and allow securely). It's focused on the 'what' and 'how' of a specific, realistic user interaction, making it a strong candidate for the best answer.

- **Option B** is also scenario-oriented, but it's more of a 'what' criterion because it's focused on a specific state change (being prompted to log in or create an account) rather than the broader 'how' the system should behave under that specific condition.

- **Option C** is a 'what' criterion because it's solely focused on a specific state (returning FALSE) and doesn't describe the 'how' the system should behave when a certain condition is met.

- **Option D** is an 'what' criterion as well, but it's more of a regulatory or compliance criterion than a scenario-oriented acceptance criterion. It doesn't describe how the system should behave in different scenarios, but rather that it must comply with certain standards.",B,B,True,K2
ISTQB-C-v1.6-29,"You are using acceptance test-driven development and designing test cases based on the following user story:

As a Regular or Special user, I want to be able to use my electronic floor card, to access specific floors.
Acceptance Criteria:
- AC1: Regular users have access to floors 1 to 3
- AC2: Floor 4 is only accessible to Special users
- AC3: Special users have all the access rights of Regular users

Which test case is the MOST reasonable one to test AC3?","The most reasonable test case for AC3 is 'Check that a Special user can access all the access rights of Regular users'. This directly tests the core statement of AC3, ensuring that Special users have the same access rights as Regular users.",D,D,True,K3
ISTQB-C-v1.6-30,Which of the following is NOT a purpose of a test plan?,"Purpose of a Test Plan:
- To define the scope, approach, and overall strategy for testing an application or system.
- To outline the test objectives, test strategies, and test cases.
- To define as exit criteria for any test level (e.g., component test level, system integration test level).
- To describe the reporting requirements for test progress and results.
- To explain why certain testing activities are excluded from the formal testing process (e.g., why system integration testing is excluded).

Given options:
- A: Defines test data and expected results for component tests and component integration tests, which is a part of a test plan.
- B: Defines as exit criteria for the component test level, which is a part of a test plan.
- C: Describes the reporting requirements for test progress and results, which is a part of a test plan.
- D: Explains why system integration testing will be excluded from testing, which aligns with the purpose of a test plan to define the scope and strategy of testing activities.

The correct answer is D, as a test plan explains why certain testing activities are excluded from the formal testing process, which is a key purpose of a test plan.",D,A,False,K2
ISTQB-C-v1.6-31,"At the beginning of each iteration, the team estimates the amount of work (in person-days) they will need to complete during the iteration. Let E(n) be the estimated amount of work for iteration n, and let A(n) be the actual amount of work done in iteration n. From the third iteration, the team uses the following estimation model based on extrapolation: $E(n)=rac{3*A(n-1)+A(n-2)}{4}$ The graph shows the estimated and actual amount of work for the first four iterations.

- Iteration 1: Estimated = 8, Actual = 7
- Iteration 2: Estimated = 7, Actual = 12
- Iteration 3: Estimated = 10.8, Actual = 8
- Iteration 4: Estimated = 9, Actual = 6

 What is the estimated amount of work for iteration #5?","The team uses the estimation model $E(n)=rac{3*A(n-1)+A(n-2)}{4}$ from the third iteration. To find the estimated amount of work for iteration #5, we need to calculate E(5) using the values for iterations 3 and 4. For iteration 4, the actual amount of work was 6 person-days. For iteration 3, the actual amount of work was 8 person-days. Plugging these values into the estimation model: $E(5)=rac{3*A(4)+A(3)}{4} = \frac{3*6+8}{4} = \frac{18+8}{4} = \frac{26}{4} = 6.5$. Therefore, the estimated amount of work for iteration #5 is 6.5 person-days. The correct answer is option C.",C,C,True,K3
ISTQB-C-v1.6-32,"You are preparing a test execution schedule for executing seven test cases TC 1 to TC 7. The following figure includes the priorities of these test cases (1=highest priority, 3 = lowest priority). The figure also shows the dependencies between test cases using arrows. For instance, the arrow from TC 4 to TC 5 means that TC 5 can only be executed if TC 4 was previously executed.

- TC 1 (priority=2) -> TC 2 (priority=3) -> TC 5 (priority=1) -> TC 6 (priority=3)
- TC 4 (priority=2) -> TC 5 (priority=1) -> TC 6 (priority=3)
- TC 4 (priority=2) -> TC 7 (priority=1)
-TC 3 (priority=2)

Which test case should be executed sixth?","To determine which test case should be executed sixth, we need to analyze the dependencies and priorities.

- TC 1 (priority=2) has no dependencies.
- TC 2 (priority=3) depends on TC 1.
- TC 3 (priority=2) has no dependencies.
- TC 4 (priority=2) depends on itself but does not affect execution order directly. It has dependencies on TC 5 and TC 6.
- TC 5 (priority=1) depends on TC 4.
- TC 6 (priority=3) depends on TC 4 and TC 5.
- TC 7 (priority=1) depends on TC 4.

The dependencies for TC 6 are TC 4 and TC 5. Since TC 5 is dependent on TC 4, and TC 4 is dependent on itself, TC 6 can be executed after TC 4 and TC 5.

The priority of TC 6 is 3, which is lower than TC 2 and TC 3 but higher than TC 5. However, based on dependencies, TC 2 (priority=3) and TC 5 (priority=1) should be executed first because TC 2 directly depends on TC 1, and TC 5 depends on TC 4, which has to be executed first.

Given these constraints, the correct order for execution would be: TC 1, TC 2, TC 3, TC 4, TC 5, TC 6, TC 7.

Therefore, the test case that should be executed sixth is TC 6.",C,A,False,K2
ISTQB-C-v1.6-33,What does the test pyramid model show?,"The test pyramid model illustrates the ideal structure of a test suite, prioritizing priority 1, 2, and 3 tests. It ensures that the most critical functionality is covered with high granularity and sufficient coverage. The correct answer reflects this structure.",B,B,True,K1
ISTQB-C-v1.6-34,"What is the relationship between the testing quadrants, test levels and test types?","Testing quadrants define the location of test types within specific levels, relating test types to levels and their relevance to stakeholders.",D,D,True,K2
ISTQB-C-v1.6-35,Which of the following is an example of how product risk analysis may influence the thoroughness and scope of testing?,"The correct answer is 'C': 'The assessed risk level helps us to select the rigor of testing'. This is because the risk analysis will provide a risk score or level. If the risk is high, the testing approach will be more rigorous. If the risk is low, the testing approach can be less intensive.",C,C,True,K2
ISTQB-C-v1.6-36,Which of the following activities in the test process makes the MOST use of test progress reports?,"Test completion reports show which tests have passed, failed, or been skipped. They also show test execution results (e.g., number of failures). Test progress reports are often most useful during test completion, as they provide immediate feedback on test execution status.",B,B,True,K2
ISTQB-C-v1.6-37,Which of the following is NOT an example of how configuration management supports testing?,Option D is 'All identified defects have an assigned status'. This is more of a defect management practice than a configuration management practice that supports testing.,D,D,True,K2
ISTQB-C-v1.6-38,Consider the following defect report for a web-based shopping application: Application: WebShop v0.99 Defect: Login button not working Steps to Reproduce: Launch the website Click on the login button Expected result: The user should be redirected to the login page. Actual result: The login button does not respond when clicked. Severity: High Priority: Urgent What is the MOST important information that is missing from this defect report?,"The most important information missing from this defect report is the 'Impact on the interests of stakeholders'. This is crucial because it links the defect to real-world consequences, making the report more valuable for prioritization and resolution. For example, a login issue in a web-based shopping application might impact customers who cannot access their accounts, leading to lost sales and revenue.",D,B,False,K3
ISTQB-C-v1.6-39,"Tools from which of the following categories help with the organization of test cases, detected defects and configuration management?","The correct answer is 'D' because Test Management Tools (e.g., Test Management Software, Test Reporting Tools) help with the organization of test cases, detected defects, and configuration management.",D,D,True,K2
ISTQB-C-v1.6-40,Which of the following is MOST likely to be a benefit of test automation?,"The correct answer is 'D': 'The prevention of human errors through greater consistency and repeatability'. This is because automation reduces the risk of human mistakes, such as omitting steps or introducing biases, which are common in manual testing.",D,D,True,K1
